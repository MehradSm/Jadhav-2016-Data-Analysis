function likelihood_by_state = get_likelihood_by_state(state_number, num_linear_distance_bins, ...
    spike_inds, mark_spike_by_tetrode, mark_spike_by_tetrode_number, marks, ...
    spike_times_to_linear_position_time_bins_index, place_field_estimator, linear_distance_occupancy, estimated_rate_by_tetrode, dt, smker)
num_spikes = length(spike_inds);
likelihood_by_tetrode = zeros(num_linear_distance_bins, num_spikes);
for spike_number = 1:num_spikes
    tetrode_ind = find(mark_spike_by_tetrode(spike_inds(spike_number), :));
    likelihood_by_tetrode(:, spike_number) = get_likelihood_by_tetrode(mark_spike_by_tetrode_number(spike_inds(spike_number), tetrode_ind), ...
        marks{tetrode_ind}, spike_times_to_linear_position_time_bins_index{tetrode_ind, state_number}, ...
        place_field_estimator{tetrode_ind, state_number}, linear_distance_occupancy{state_number}, ...
        estimated_rate_by_tetrode{tetrode_ind, state_number}, dt, smker);
end
likelihood_by_state = prod(likelihood_by_tetrode, 2);
likelihood_by_state = normalize_distribution(likelihood_by_state);
end