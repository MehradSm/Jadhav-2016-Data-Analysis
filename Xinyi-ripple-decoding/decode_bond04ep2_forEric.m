clear variables; clc;
% bond04, epoch 2
animal = 'bon';
day = 4;
epoch = 2;
tetrode_number = [1 2 4 5 7 10 11 12 13 14 17 18 19 20 22 23 27 29]; %tetrode index
get_file_name = @(file_type) sprintf('bond_data/%s%s%02d.mat', animal, file_type, day);

task_file = load(get_file_name('task'));
position_file = load(get_file_name('pos'));
spikes_file = load(get_file_name('spikes')); %sorted spikes
linear_position_file = load(get_file_name('linpos'));
ripples_file = load(get_file_name('ripplescons'));
trajectory_encode_file = load(get_file_name('trajencode'));
well_visitions_file = load(get_file_name('wellvisits'));

[tetrode_index, neuron_index] = get_tetrodes_with_spikes(spikes_file.spikes, day, epoch, tetrode_number);

[rippleI, ...
    ripple_index, ...
    position_time_stamps, ...
    position_time_stamps_binned, ...
    vecLF, ...
    traj_Ind, ...
    time, ...
    stateV, ...
    stateV_delta, ...
    stateM_I1_normalized_gaussian, ...
    stateM_Indicator0_normalized_gaussian, ...
    Lint_Indicator_outbound, ...
    Lint_Indicator_inbound, ...
    tet_ind, ...
    tet_sum, ...
    markAll, ...
    procInd1_Ia_out, ...
    procInd1_I_out, ...
    smker, ...
    Xnum_I_out, ....
    occ_Indicator_outbound, ...
    Lint_I_out, ...
    procInd1_Ia_in, ...
    procInd1_I_in, ...
    Xnum_I_in, ...
    occ_Indicator_inbound, ...
    Lint_I_in ...
    ] = ...
    encode_state(...
    animal, ...
    day, ...
    linear_position_file.linpos{day}{epoch}, ...
    position_file.pos{day}{epoch}, ...
    trajectory_encode_file.trajencode{day}{epoch}, ...
    ripples_file.ripplescons{day}{epoch}, ...
    spikes_file.spikes{day}{epoch}, ...
    tetrode_index, ...
    neuron_index, ...
    tetrode_number);

summary_statistic = decode_state(...
    position_file.pos{day}{epoch}, ...
    rippleI, ...
    ripple_index, ...
    position_time_stamps, ...
    position_time_stamps_binned, ...
    vecLF, ...
    traj_Ind, ...
    time, ...
    stateV, ...
    stateV_delta, ...
    stateM_I1_normalized_gaussian, ...
    stateM_Indicator0_normalized_gaussian, ...
    Lint_Indicator_outbound, ...
    Lint_Indicator_inbound, ...
    tet_ind, ...
    tet_sum, ...
    markAll, ...
    procInd1_Ia_out, ...
    procInd1_I_out, ...
    smker, ...
    Xnum_I_out, ....
    occ_Indicator_outbound, ...
    Lint_I_out, ...
    procInd1_Ia_in, ...
    procInd1_I_in, ...
    Xnum_I_in, ...
    occ_Indicator_inbound, ...
    Lint_I_in ...
    );


expected = load('expected_sumStat.mat');
isequal(expected.sumStat, summary_statistic)



